{"ast":null,"code":"import toast from 'react-hot-toast';\nimport { authenticate } from './helper';\n\n/** validate login page username */\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  if (values.username) {\n    // check user exist or not\n    const {\n      status\n    } = await authenticate(values.username);\n    if (status !== 200) {\n      errors.exist = toast.error('User does not exist...!');\n    }\n  }\n  return errors;\n}\n\n/** validate password */\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n/** validate reset password */\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"Password not match...!\");\n  }\n  return errors;\n}\n\n/** validate register form */\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n  return errors;\n}\n\n/** validate profile page */\nexport async function profileValidation(values) {\n  const errors = emailVerify({}, values);\n  return errors;\n}\n\n/** ************************************************* */\n\n/** validate password */\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  /* eslint-disable no-useless-escape */\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character\");\n  }\n  return errors;\n}\n\n/** validate username */\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username...!');\n  }\n  return error;\n}\n\n/** validate email */\nfunction emailVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.email) {\n    error.email = toast.error(\"Email Required...!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","authenticate","usernameValidate","values","errors","usernameVerify","username","status","exist","error","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","registerValidation","emailVerify","profileValidation","arguments","length","undefined","specialChars","includes","test","email"],"sources":["D:/STARBOY/confidential/UNI/SLIIT/Y2.S2/IT2080 - Information Technology Project/Project/cms3/client/cms-3/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\r\nimport { authenticate } from './helper'\r\n\r\n/** validate login page username */\r\nexport async function usernameValidate(values){\r\n    const errors = usernameVerify({}, values);\r\n\r\n    if(values.username){\r\n        // check user exist or not\r\n        const { status } = await authenticate(values.username);\r\n        \r\n        if(status !== 200){\r\n            errors.exist = toast.error('User does not exist...!')\r\n        }\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n/** validate password */\r\nexport async function passwordValidate(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\n/** validate reset password */\r\nexport async function resetPasswordValidation(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    if(values.password !== values.confirm_pwd){\r\n        errors.exist = toast.error(\"Password not match...!\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n/** validate register form */\r\nexport async function registerValidation(values){\r\n    const errors = usernameVerify({}, values);\r\n    passwordVerify(errors, values);\r\n    emailVerify(errors, values);\r\n\r\n    return errors;\r\n}\r\n\r\n/** validate profile page */\r\nexport async function profileValidation(values){\r\n    const errors = emailVerify({}, values);\r\n    return errors;\r\n}\r\n\r\n\r\n/** ************************************************* */\r\n\r\n/** validate password */\r\nfunction passwordVerify(errors = {}, values){\r\n    /* eslint-disable no-useless-escape */\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n    if(!values.password){\r\n        errors.password = toast.error(\"Password Required...!\");\r\n    } else if(values.password.includes(\" \")){\r\n        errors.password = toast.error(\"Wrong Password...!\");\r\n    }else if(values.password.length < 4){\r\n        errors.password = toast.error(\"Password must be more than 4 characters long\");\r\n    }else if(!specialChars.test(values.password)){\r\n        errors.password = toast.error(\"Password must have special character\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\n/** validate username */\r\nfunction usernameVerify(error = {}, values){\r\n    if(!values.username){\r\n        error.username = toast.error('Username Required...!');\r\n    }else if(values.username.includes(\" \")){\r\n        error.username = toast.error('Invalid Username...!')\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\n/** validate email */\r\nfunction emailVerify(error ={}, values){\r\n    if(!values.email){\r\n        error.email = toast.error(\"Email Required...!\");\r\n    }else if(values.email.includes(\" \")){\r\n        error.email = toast.error(\"Wrong Email...!\")\r\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\r\n        error.email = toast.error(\"Invalid email address...!\")\r\n    }\r\n\r\n    return error;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}